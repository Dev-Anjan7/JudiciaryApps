/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.naturewise_yearwise_gen;

import static com.mycompany.naturewise_yearwise_gen.NatureWiseYearWiseGenerator.setThisFileFilter;
import java.awt.Component;
import java.awt.print.PrinterException;
import java.io.File;
import java.text.MessageFormat;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Anjan
 */
public class DisplayCaseInfoTable extends javax.swing.JFrame {

    private DefaultTableModel initialDataModel;

    /**
     * Creates new form DisplayCaseInfoTable
     */
    public DisplayCaseInfoTable() {
        initComponents();
        TableColumnModel tca = tableCaseInfo.getColumnModel();
        tca.getColumn(0).setPreferredWidth(10);
        tca.getColumn(1).setPreferredWidth(90);
        tca.getColumn(2).setPreferredWidth(110);
        initialDataModel = (DefaultTableModel) (tableCaseInfo.getModel());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableCaseInfo =  new javax.swing.JTable(){//Implement table cell tool tips.
            public String getToolTipText(java.awt.event.MouseEvent e) {
                String tipToDisplay = null;
                java.awt.Point p = e.getPoint();
                int row = rowAtPoint(p);
                int col = columnAtPoint(p);

                try {
                    //comment row, exclude heading
                    if(row != 0){
                        tipToDisplay = getValueAt(row, col).toString();
                    }
                } catch (RuntimeException e1) {
                    //catch null pointer exception if mouse is over an empty line
                }

                return tipToDisplay;
            }
        };
        btnSave = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        lbl_heading = new javax.swing.JLabel();
        panel_filterData = new javax.swing.JPanel();
        lbl_partyName = new javax.swing.JLabel();
        tf_sections = new javax.swing.JTextField();
        lbl_sections = new javax.swing.JLabel();
        tf_acts = new javax.swing.JTextField();
        lbl_acts = new javax.swing.JLabel();
        tf_partyName = new javax.swing.JTextField();
        btn_filter = new javax.swing.JButton();
        lbl_caseNature1 = new javax.swing.JLabel();
        tf_caseNature = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Case Details");
        setBackground(new java.awt.Color(255, 255, 153));

        tableCaseInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr. No.", "Case Number", "Party Name", "Year of Registration", "Stage", "Case Nature", "Act Section", "Police Station"
            }
        ));
        tableCaseInfo.setShowHorizontalLines(true);
        tableCaseInfo.setShowVerticalLines(true);
        tableCaseInfo.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableCaseInfo);

        btnSave.setText("Save");
        btnSave.setActionCommand("btnSave");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        lbl_heading.setFont(new java.awt.Font("Segoe UI", 2, 20)); // NOI18N
        lbl_heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_heading.setText("Details of Cases");

        panel_filterData.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter Data"));
        panel_filterData.setForeground(new java.awt.Color(237, 163, 163));

        lbl_partyName.setText("Enter Party Name");

        tf_sections.setToolTipText("Enter the sections seperated by comma");

        lbl_sections.setText("Enter Sections");

        tf_acts.setToolTipText("Enter the acts seperated by comma");

        lbl_acts.setText("Enter Acts");

        tf_partyName.setToolTipText("Enter the party name here");

        btn_filter.setText("Filter");
        btn_filter.setToolTipText("Click this button to filter on above entered criteria");
        btn_filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_filterActionPerformed(evt);
            }
        });

        lbl_caseNature1.setText("Enter Case Nature");

        tf_caseNature.setToolTipText("Enter the Case Nature(registration nature) seperated by comma");

        javax.swing.GroupLayout panel_filterDataLayout = new javax.swing.GroupLayout(panel_filterData);
        panel_filterData.setLayout(panel_filterDataLayout);
        panel_filterDataLayout.setHorizontalGroup(
            panel_filterDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_filterDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_filterDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_filterDataLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_filter))
                    .addGroup(panel_filterDataLayout.createSequentialGroup()
                        .addGroup(panel_filterDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_sections, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_acts, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_sections, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_partyName, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_acts, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_caseNature1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_partyName, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_caseNature, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel_filterDataLayout.setVerticalGroup(
            panel_filterDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_filterDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_acts, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_acts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_sections, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_sections, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_caseNature1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(tf_caseNature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_partyName, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tf_partyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btn_filter))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(lbl_heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(35, 35, 35))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_filterData, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 462, Short.MAX_VALUE)
                        .addComponent(btnPrint))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbl_heading, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_filterData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>                        

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {                                         
        try {
            MessageFormat header = new MessageFormat(this.lbl_heading.getText());
            MessageFormat footer = new MessageFormat("");
            boolean printed = tableCaseInfo.print(JTable.PrintMode.FIT_WIDTH, header, footer);

        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(null, "Some error occured in Printing",
                    "Print error", JOptionPane.ERROR_MESSAGE);
        }
    }                                        

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {                                        
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File(System.getProperty("user.home") + System.getProperty("file.separator") + "Desktop"));
        setThisFileFilter(chooser);
        int retVal = chooser.showSaveDialog((Component) evt.getSource());

        if (retVal == chooser.APPROVE_OPTION) {

            String filename = chooser.getSelectedFile().toString();

            if (!filename.substring((filename.length() - 5), (filename.length() - 1)).toLowerCase().equals(".csv")) {
                filename = filename + ".csv";
            }

            boolean success = Writer.writeToTextFile(filename, tableCaseInfo.getModel());
            if (success) {
                JOptionPane.showMessageDialog(rootPane, "File " + filename + " Created successfully!",
                        "File Created Successfuly!",
                        JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Error in creating the file!", "Write Failure", JOptionPane.ERROR_MESSAGE);
            }
        }

    }                                       

    private void btn_filterActionPerformed(java.awt.event.ActionEvent evt) {                                           
        String actsString = tf_acts.getText();
        String sectionsString = tf_sections.getText();
        String caseNatureString = tf_caseNature.getText();
        String partyNameString = tf_partyName.getText();

        String filterKeyWord = "";
        if (!actsString.equals("")) {
            filterKeyWord += actsString;
        }
        if (!sectionsString.equals("")) {
            filterKeyWord += sectionsString;
        }
        if (!caseNatureString.equals("")) {
            filterKeyWord += caseNatureString;
        }
        if (!partyNameString.equals("")) {
            filterKeyWord += partyNameString;
        }

        String[] searchString = filterKeyWord.split(",");

        String[] colNames = {"Sr. No.", "Case No.", "Party Name", "Registration Date", "Stage", "Case Nature", "Act Section"};
        DefaultTableModel filteredModel = new DefaultTableModel(null, colNames);
        filteredModel.getDataVector().removeAllElements();

        int srno = 1;
        for (int i = 0; i < initialDataModel.getRowCount(); i++) {
            String data = initialDataModel.getValueAt(i, 2).toString()
                    + " " + initialDataModel.getValueAt(i, 4).toString()
                    + " " + initialDataModel.getValueAt(i, 5).toString();
            //System.out.println(data);

            for (int j = 0; j < searchString.length; j++) {
                if (data.toLowerCase().trim().contains(searchString[j].toLowerCase().trim())) {
                    //System.out.println("Sr. No: " + i);
                    addFilteredRow(i, srno++, filteredModel);
                    break;
                }
            }
        }
        //tableCaseInfo.removeAll();
        tableCaseInfo.setModel(filteredModel);
    }                                          

    private void addFilteredRow(int row, int srno, DefaultTableModel dmodel) {
        DefaultTableModel dtm = initialDataModel;

        dmodel.addRow(new Object[]{srno, dtm.getValueAt(row, 1),
            dtm.getValueAt(row, 2), dtm.getValueAt(row, 3), dtm.getValueAt(row, 4),
            dtm.getValueAt(row, 5)});
    }

    

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btn_filter;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_acts;
    private javax.swing.JLabel lbl_caseNature1;
    public javax.swing.JLabel lbl_heading;
    private javax.swing.JLabel lbl_partyName;
    private javax.swing.JLabel lbl_sections;
    private javax.swing.JPanel panel_filterData;
    public javax.swing.JTable tableCaseInfo;
    private javax.swing.JTextField tf_acts;
    private javax.swing.JTextField tf_caseNature;
    private javax.swing.JTextField tf_partyName;
    private javax.swing.JTextField tf_sections;
    // End of variables declaration                   
}
